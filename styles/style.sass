$white: #fff;
$black: #333;
$off-white: #eeeeef;
$blue: #00ff9d;
$pad: 20;
$gridWidth: 1200;
$singleColumn: 12.5;

$margins: left top right bottom;

@mixin box-sizing($type) {
  -webkit-box-sizing: $type;
  -moz-box-sizing: $type;
  box-sizing: $type;
}

@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
}

@each $side in $margins {
  @for $i from 1 to 6 {
    $offset: 10 * $i;
    .m-#{$side}-#{$offset} {
      margin-#{$side}: #{$offset}px;
    }
  }
}

*, *:before, *:after {
  @include box-sizing(border-box);
}

/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
  font-family: Helvetica, Arial, sans-serif;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

// poor man's grid from css tricks + myself
.grid {
  width: 1200px;
  background: white;
  margin: 0 0 $pad 0;
  &:before {
    /* Or @extend clearfix */
    content: "";
    display: table;
    clear: both;
  }

  &:after {
    /* Or @extend clearfix */
    content: "";
    display: table;
    clear: both;
  }

  .grid {
    margin-top: 20px;
    margin-bottom: 20px;
  }
}

[class*='col-'] {
  float: left;
  padding-right: #{$pad}px;
  padding-left: #{$pad}px;
  .grid &:last-of-type {
    padding-right: 0;
  }
}

.col-full {
  width: 100%;
}

.col-2-3 {
  width: 66.66%;
}

.col-1-3 {
  width: 33.33%;
}

.col-1-2 {
  width: 50%;
}

.col-3-8 {
  width: 37.5%;
}

.col-1-4 {
  width: 25%;
}

@for $iterator from 1 to 8 {
  .col-#{$iterator}-8 {
    width: percentage((12.5 * $iterator)/$gridWidth);
  }
}

@for $column from 1 to 8 {
  $offset: 12.5 * $column;
  .offset-#{$column}-8 {
    margin-left: percentage($offset/$gridWidth);
  }
}

.offset-2-3 {
  margin-left: 66.66%;
}

.offset-1-3 {
  margin-left: 33.33%;
}

.offset-7 {
  margin-left: 87.5%;
}

.offset-1-2 {
  margin-left: 50%;
}

.offset-1-4 {
  margin-left: 25%;
}

/* Opt-in outside padding */
.grid-pad {
  padding: $pad 0 $pad $pad;
  [class*='col-']:last-of-type {
    padding-right: #{$pad}px;
  }
}

.pull-left {
  float: left;
}

.pull-right {
  float: right;
}

/* END GRID */


label {
  display: block;
}

.oscilloscope {
  @include border-radius(12px);

  border-style: solid;
  border-width: 3px;
  border-top-width: 6px;
  border-bottom-width: 6px;
  border-color: $black;
}
